version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:8 # ...with this image as the primary container; this is where all `steps` will run
       # and this image as the secondary service container
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: # run frontend
          name: setup
          command: npm run setup
      - store_artifacts: # special step to save test results as as artifact
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results: # special step to upload test results for display in Test Summary
          path: test-results.xml
    docker: # run the steps with Docker
        - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run

      steps: # a collection of executable commands

        - checkout # check out source code to working directory

        - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
            key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

        - run: mvn dependency:go-offline # gets the project dependencies

        - save_cache: # saves the project dependencies
            paths:
              - ~/.m2
            key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

        - run: mvn package # run the actual tests

        - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
            path: target/surefire-reports

        - store_artifacts: # store the uberjar as an artifact
            path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
        # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
